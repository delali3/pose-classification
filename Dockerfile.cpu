# Optimized Dockerfile for DigitalOcean deployment - Fixed PyTorch CPU installation
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install minimal system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libjpeg-dev \
    libpng-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Create a non-root user for running the application
RUN useradd --create-home --shell /bin/bash app && chown -R app:app /app

# Install PyTorch CPU version first (this ensures we get the CPU-only version)
RUN pip install --no-cache-dir \
    torch==2.0.1+cpu \
    torchvision==0.15.2+cpu \
    --index-url https://download.pytorch.org/whl/cpu

# Copy requirements file (without torch/torchvision)
COPY requirements-no-torch.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy only essential application files
COPY app.py .
COPY pose_classifier.pkl .
COPY yolo11n-pose.pt .

# Create minimal directory structure and set permissions
RUN mkdir -p sound images/good images/bad logs data \
    && chown -R app:app /app

# Copy sound file if it exists
COPY sound/sound.wav sound/ 2>/dev/null || echo "No sound file found"

# Set final permissions
RUN chown -R app:app /app

# Switch to non-root user
USER app

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/_stcore/health || exit 1

# Run command
CMD ["streamlit", "run", "app.py", "--server.port=8080", "--server.address=0.0.0.0", "--server.headless=true", "--server.enableCORS=false"]
