# Optimized Dockerfile for DigitalOcean deployment
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install minimal system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libjpeg-dev \
    libpng-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Install Python packages as root first
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Create app user and set permissions
RUN useradd --create-home --shell /bin/bash app \
    && mkdir -p sound images/good images/bad logs data \
    && chown -R app:app /app

# Copy application files
COPY app.py .
COPY pose_classifier.pkl .
COPY yolo11n-pose.pt .

# Copy sound directory if it exists
RUN if [ -d "sound" ]; then cp -r sound/* sound/ 2>/dev/null || true; fi

# Create sound file if it doesn't exist
RUN touch sound/sound.wav || true

# Set final permissions
RUN chown -R app:app /app

# Switch to non-root user
USER app

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/_stcore/health || exit 1

# Run command
CMD ["streamlit", "run", "app.py", "--server.port=8080", "--server.address=0.0.0.0", "--server.headless=true", "--server.enableCORS=false"]
